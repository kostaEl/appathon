package com.example.messagingstompwebsocket.Database;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

@RestController  // This means that this class is a Controller
 // This means URL's start with /demo (after Application path)
@CrossOrigin
public class UserController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    //
    private UserRepository userRepository;

    @RequestMapping(path="/registration/{userName}/{Language}")
    public ResponseEntity<Void> register(@PathVariable String userName,@PathVariable String Language) {
        User check = userRepository.findByusername(userName);
        if(check==null) {
            User n = new User();
            n.setUsername(userName);
            n.setlanguagecode(Language);
            userRepository.save(n);
        }
        return ResponseEntity.ok().build();
    }

    @GetMapping(path="/fetchAllUsers")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users

        return userRepository.findAll();
    }

}